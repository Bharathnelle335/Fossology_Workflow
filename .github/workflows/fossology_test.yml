name: test-fossology

on:
  workflow_dispatch:

jobs:
  fossology-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create dummy file
        run: echo "hello fossology" > dummy.txt

      - name: Start Fossology
        run: |
          docker run -d --name fossy -p 8081:80 fossology/fossology:4.3.0
          sleep 60

      - name: Upload file to Fossology
        run: |
          UPLOAD_RESP=$(curl -s -X POST "http://localhost:8081/repo/api/v1/uploads" \
            -H "accept: application/json" \
            -H "folderId: 1" \
            -H "public: public" \
            -H "applyGlobal: false" \
            -H "ignoreScm: false" \
            -H "uploadType: file" \
            -H "Authorization: Bearer ${{ secrets.FOSSOLOGY_TOKEN }}" \
            -H "Content-Type: multipart/form-data" \
            -F "fileInput=@dummy.txt;type=text/plain")
          echo "Upload Response: $UPLOAD_RESP"
          UPLOAD_ID=$(echo "$UPLOAD_RESP" | jq -r '.message')
          echo "UPLOAD_ID=$UPLOAD_ID" >> $GITHUB_ENV

      - name: Trigger Fossology jobs
        run: |
          JOB_RESP=$(curl -s -X POST "http://localhost:8081/repo/api/v1/jobs?uploadId=${UPLOAD_ID}&agents=nomos,copyright,email" \
            -H "accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.FOSSOLOGY_TOKEN }}")
          echo "Job Response: $JOB_RESP"
          JOB_ID=$(echo "$JOB_RESP" | jq -r '.message')
          echo "JOB_ID=$JOB_ID" >> $GITHUB_ENV

      - name: Wait for job to finish
        run: |
          for i in {1..30}; do
            STATUS=$(curl -s -X GET "http://localhost:8081/repo/api/v1/jobs/${JOB_ID}" \
              -H "accept: application/json" \
              -H "Authorization: Bearer ${{ secrets.FOSSOLOGY_TOKEN }}" | jq -r '.status')
            echo "Status: $STATUS"
            if [ "$STATUS" = "Completed" ]; then exit 0; fi
            if [ "$STATUS" = "Failed" ]; then exit 1; fi
            sleep 20
          done
          echo "‚ùå Job did not finish in time"
          exit 1

      - name: Download SPDX report
        run: |
          curl -s -X GET "http://localhost:8081/repo/api/v1/report?uploadId=${UPLOAD_ID}&reportFormat=spdx2" \
            -H "accept: application/json" \
            -H "Authorization: Bearer ${{ secrets.FOSSOLOGY_TOKEN }}" \
            -o fossology_report.spdx.json
          cat fossology_report.spdx.json
